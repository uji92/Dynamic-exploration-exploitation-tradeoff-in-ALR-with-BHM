
eta0 = np.random.uniform(0,0.2,1)
dd = np.zeros((10000,5))

c = 0
for v in range(4):
    a1 = a0
    b1 = b0
    a0 = minimize(beta_a, a1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    b0 = minimize(beta_b, b1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    dd[0,v] = np.random.uniform(0,0.2,1)
    # print(ee)
    for l in range(9999):

#         # eta0 = np.random.beta(a0,b0)

        rnde = np.random.normal(eta0,0.5)
        if rnde <=1:
          if rnde >= 0:
              re2 = scipy.stats.beta.pdf(rnde,a0,b0)/scipy.stats.beta.pdf(e0,a0,b0)

              if re2>=0.5:
                e0 = rnde
                dd[l+1,v] = e0
              else:
                e0 = e0
                dd[l+1,v] = e0


eta0 = np.random.uniform(0.4,0.6,1)
ee = np.zeros((10000,5))

c = 0
for v in range(4):
    a1 = a0
    b1 = b0
    a0 = minimize(beta_a, a1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    b0 = minimize(beta_b, b1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    ee[0,v] = np.random.uniform(0.4,0.6,1)
    # print(ee)
    for l in range(9999):

#         # eta0 = np.random.beta(a0,b0)

        rnde = np.random.normal(eta0,0.5)
        if rnde <=1:
          if rnde >= 0:
              re2 = scipy.stats.beta.pdf(rnde,a0,b0)/scipy.stats.beta.pdf(e0,a0,b0)

              if re2>=0.5:
                e0 = rnde
                ee[l+1,v] = e0
              else:
                e0 = e0
                ee[l+1,v] = e0


eta0 = np.random.uniform(0.8,1,1)
ff = np.zeros((10000,5))

c = 0
for v in range(4):
    a1 = a0
    b1 = b0
    a0 = minimize(beta_a, a1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    b0 = minimize(beta_b, b1, bounds=np.array([[0.1, 5]]), method='L-BFGS-B', options= {'ftol': 1e-10, 'disp': True}).x
    ff[0,v] = np.random.uniform(0.8,1,1)
    # print(ee)
    for l in range(9999):

#         # eta0 = np.random.beta(a0,b0)

        rnde = np.random.normal(eta0,0.5)
        if rnde <=1:
          if rnde >= 0:
              re2 = scipy.stats.beta.pdf(rnde,a0,b0)/scipy.stats.beta.pdf(e0,a0,b0)

              if re2>=0.5:
                e0 = rnde
                ff[l+1,v] = e0
              else:
                e0 = e0
                ff[l+1,v] = e0

## First 50 accepted ˆη in Metropolis sampling chain with different initial samples while querying the seventh data
font = {'family': 'Liberation serif',
        'serif': 'Times',
        'weight': 'normal',
        'size': 18}

plt.pyplot.subplots(figsize=(6,4))
plt.pyplot.rc('font', **font)
plt.pyplot.plot(dd[0:49,0],linestyle='-',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:49,0],linestyle='-',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:49,0],linestyle='-',linewidth=1.5,color='darkorange')
plt.pyplot.plot(dd[0:49,1],linestyle='--',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:49,1],linestyle='--',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:49,1],linestyle='--',linewidth=1.5,color='darkorange')
plt.pyplot.plot(dd[0:49,2],linestyle=':',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:49,2],linestyle=':',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:49,2],linestyle=':',linewidth=1.5,color='darkorange')
plt.pyplot.ylim(-0.01,1.01)

## First 10,000 accepted ˆη in Metropolis sampling chain with different initial samples while querying the seventh data

font = {'family': 'Liberation serif',
        'serif': 'Times',
        'weight': 'normal',
        'size': 18}

plt.pyplot.subplots(figsize=(6,4))
plt.pyplot.rc('font', **font)
plt.pyplot.plot(0,0,color='green',linewidth=1.5,label='Initiated at [0, 0.2]')
plt.pyplot.plot(0,0,color='darkorange',linewidth=1.5,label='Initiated at [0.4, 0.6]')
plt.pyplot.plot(0,0,color='blue',linewidth=1.5,label='Initiated at [0.8, 1]')
plt.pyplot.plot(dd[0:9999,0],linestyle='-',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:9999,0],linestyle='-',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:9999,0],linestyle='-',linewidth=1.5,color='darkorange')
plt.pyplot.plot(dd[0:9999,1],linestyle='--',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:9999,1],linestyle='--',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:9999,1],linestyle='--',linewidth=1.5,color='darkorange')
plt.pyplot.plot(dd[0:9999,2],linestyle=':',linewidth=1.5,color='green')
plt.pyplot.plot(ff[0:9999,2],linestyle=':',linewidth=1.5,color='blue')
plt.pyplot.plot(ee[0:9999,2],linestyle=':',linewidth=1.5,color='darkorange')

plt.pyplot.legend(loc='upper right')
plt.pyplot.ylim(-0.01,1.01)
