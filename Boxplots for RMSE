def set_size(width, fraction=1):
    """Set figure dimensions to avoid scaling in LaTeX.

    Parameters
    ----------
    width: float
            Document textwidth or columnwidth in pts
    fraction: float, optional
            Fraction of the width which you wish the figure to occupy

    Returns
    -------
    fig_dim: tuple
            Dimensions of figure in inches
    """
    # Width of figure (in pts)
    fig_width_pt = width * fraction

    # Convert from pt to inches
    inches_per_pt = 1 / 72.27

    # Golden ratio to set aesthetic figure height
    # https://disq.us/p/2940ij3
    golden_ratio = (5**.5 - 1) / 2

    # Figure width in inches
    fig_width_in = fig_width_pt * inches_per_pt
    # Figure height in inches
    fig_height_in = fig_width_in * golden_ratio

    fig_dim = (fig_width_in, fig_height_in)

    return fig_dim

labels = ["1","2","3","4","5","10","15","20","25","50","100"]
x = np.arange(len(labels))
w=0.11
meanpointprops = dict(marker='*', markeredgecolor='black', markerfacecolor='black')
width = 1500
fig, ax = plt.pyplot.subplots(1, 1, figsize=set_size(width))
font = {'family': 'Liberation serif',
        'serif': 'Times',
        'weight': 'normal',
        'size': 30}
plt.pyplot.rc('font', **font)
boxhier1 = ax.boxplot(totprop, positions = x-w, widths = 0.08,patch_artist=True,boxprops=dict(facecolor='red'),flierprops= dict(marker='o', markerfacecolor='red', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
boxigs = ax.boxplot(totigs,positions = x, widths =0.08,patch_artist=True,boxprops=dict(facecolor='goldenrod'),flierprops= dict(marker='o', markerfacecolor='goldenrod', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
boxqbc = ax.boxplot(totqbc, positions = x+w, widths = 0.08,patch_artist=True,boxprops=dict(facecolor='mediumseagreen'),flierprops= dict(marker='o', markerfacecolor='mediumseagreen', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
boxvar = ax.boxplot(totvar, positions = x+2*w, widths =0.08,patch_artist=True,boxprops=dict(facecolor='aqua'),flierprops= dict(marker='o', markerfacecolor='aqua', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
boxent = ax.boxplot(totent, positions = x+3*w, widths =0.08,patch_artist=True,boxprops=dict(facecolor='dodgerblue'),flierprops= dict(marker='o', markerfacecolor='dodgerblue', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
boxrand = ax.boxplot(totrand, positions = x+4*w, widths = 0.08,patch_artist=True,boxprops=dict(facecolor='mediumorchid'),flierprops= dict(marker='o', markerfacecolor='mediumorchid', markersize=4,
                  markeredgecolor='none'),whiskerprops=dict(color='grey'),meanprops=meanpointprops,showmeans=True,showcaps=False,medianprops = dict(linestyle='-.', linewidth=2, color='yellow'))
locs=ax.get_xticks()

ax.plot(x-w, np.average(totprop,axis=0), 'r-')
ax.set_ylim(0,7)
ax.set_xlabel("Number of added points")
ax.set_ylabel("RMSE")
ax.set_xticks(x)
ax.set_xticklabels(labels)
# ax.legend([boxhier1["boxes"][0], boxigs["boxes"][0],boxqbc["boxes"][0],boxvar["boxes"][0],boxrand["boxes"][0]], ["MAP (with hierarchical model)","IGS","QBC","Maximum variance","Random sampling"],loc="best")
